import type { Metadata } from "next";
import { poppins } from "./utils/Fonts";
import "./globals.css";
import { ThemeProvider } from 'next-themes';
import ThemeWrapper from "./containers/ThemeWrapper";
import Navbar from "./components/Navbar/Navbar";
import ReduxProvider from "./providers/ReduxProviders";
import MountedClient from "./containers/MountedClient";
import ToastProvider from "./providers/ToastProviders";
import { ReactNode, useEffect } from "react";
import { fetchCurrentUser } from "./actions/getCurrentUser";
import UserContextProvider from "@/app/providers/UserProvider"; // Import the context provider
import { NextAuthProvider } from "./providers/NextAuthProvider";
import { getSession, SessionProvider, useSession } from "next-auth/react";
import { getServerSession } from "next-auth";
import { authOptions } from "./api/auth/[...nextauth]/route";
import { useAppDispatch } from "./redux/hooks";
import { useDispatch } from "react-redux";
import { setUser } from "./redux/userSlice";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({ children }: { children: ReactNode }) {

  //const user = await fetchCurrentUser()

  // const dispatch = useDispatch()
  // dispatch(setUser(user)) 


  return (
    <html lang="en" suppressHydrationWarning={true}>
      <head>
        <title>Kartal Chat App</title>
        <link rel="shortcut icon" href="/kartal_icon.svg" type="image/x-icon" />
      </head>
      <body className={`${poppins.className} bg-main h-screen w-full`}>
        <ThemeProvider attribute="class" enableSystem={true}>
          <ThemeWrapper>
            <NextAuthProvider>
              <ReduxProvider>

                <MountedClient>
                  <ToastProvider />


                  <Navbar />
                  {children}

                </MountedClient>

              </ReduxProvider>
            </NextAuthProvider>
          </ThemeWrapper>
        </ThemeProvider>
      </body>
    </html>
  );
}



